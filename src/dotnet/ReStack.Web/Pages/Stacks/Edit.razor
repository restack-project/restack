@page "/stacks/{QueryStackId}/edit"
@page "/stacks/{QueryStackId}/edit/{QueryPanel}"
@page "/stacks/add"

@inherits BaseComponent

<PageTitle>@(Stack?.Id == 0 ? "Add" : $"{Stack?.Name} - Edit") - ReStack</PageTitle>

<Page @ref="Page" IsLoading="IsLoading">
    @if (LoadError)
    {
        <p>No stack found, go back to the <a href="@NavigationManager.Stacks()" class="link">overview</a></p>
    }
    else
    {
        @if (Stack is not null)
        {
            <div class="flex flex-wrap justify-between items-start mb-6">
                <div class="flex items-center">
                    @{
                        var url = Stack.Id == 0 ? NavigationManager.Stacks() : NavigationManager.StackDetail(Stack.Id);
                    }
                    <a @onclick="async() => await JS.GoBack()" class="pe-2 py-2 cursor-pointer">
                        <Icon Type="FontAwesomeIcons.ArrowLeft" Size="IconSize.Md" />
                    </a>
                    @if (Stack.Id != 0)
                    {
                        <h1 class="text-xl md:text-3xl ms-2">@Stack.Name</h1>
                    }
                </div>
                <div class="w-full flex md:w-fit flex mt-2">
                    @if (Stack.Id != 0)
                    {
                        <button @onclick="SaveAndExecute"
                                class="btn-secondary me-2 md:w-fit">
                            Execute
                        </button>
                    }

                    <button @onclick="async() => await Save(true)"
                            class="btn-primary">
                        Save
                    </button>

                    @if (Stack.Id != 0)
                    {
                        <button @onclick="ToggleEditor"
                                class="rounded text-sm py-3 px-6 hover:text-primary-500">
                            @if (ShowEditor)
                            {
                                <Icon Type="FontAwesomeIcons.Gear" />
                            }
                            else
                            {
                                <Icon Type="FontAwesomeIcons.Code" />
                            }
                        </button>
                    }
                </div>
            </div>

            <div hidden="@(!ShowEditor)">
                <Blace.Components.Editor @ref="Editor"
                                         CssClass="!h-[calc(100vh-11rem)] !overflow-none"
                                         SettingCssStyle="color: var(--main-font-color); background: var(--main-color-500); font-size: .8rem;"
                                         T="Models.StackFile"
                                         ShowSettings="true" />
            </div>

            if (!ShowEditor)
            {
                @if (EditContext is not null)
                {
                    <EditForm EditContext="EditContext">

                        <DataAnnotationsValidator />

                        <PanelSelector @ref="PanelSelector" OnPanelChanged="@StateHasChangedAsync">
                            <SettingsPanel Sequence="1" Title="Settings" Stack="Stack" Validations="Validations" />
                            <LibrariesPanel Sequence="2" Title="Libraries" Stack="Stack" Libraries="ComponentLibraries" />
                            <ReStack.Web.Pages.Stacks.Panels.TagsPanel Sequence="3" Title="Tags" Stack="Stack" Tags="Tags" />
                            <IgnoreRulesPanel Sequence="4" Title="Ignore rules" Stack="Stack" />
                        </PanelSelector>

                    </EditForm>
                }

                @if (Stack.Id != 0 && PanelSelector?.ActivePanel?.Sequence == 1)
                {
                    <div class="flex items-center justify-between text-sm mt-8 mb-4">
                        <div class="flex items-center">
                            <div class="me-4 p-1">
                                <button class="me-4 border-b-4 px-1 cursor-pointer border-red-500">Danger zone</button>
                            </div>
                        </div>
                    </div>

                    <Panel CssClass="p-4">

                        <div class="flex justify-between flex-wrap gap-4">
                            <div>
                                <p class="text-lg mb-2">Delete stack?</p>
                                <p class="text-sm italic">This will delete all the jobs and the source file of the script.</p>
                            </div>

                            <button @onclick="Delete"
                                    class="btn-delete">
                                Delete
                            </button>
                        </div>

                    </Panel>
                }
            }
        }
    }
</Page>