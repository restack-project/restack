@page "/"
@page "/stacks"

@inherits SubscribeComponent

<PageTitle>Stacks - ReStack</PageTitle>

<Page BreadcrumbLinks="BreadcrumbLinks">

    <div class="flex flex-wrap justify-between items-start mb-6">
        <h1 class="text-3xl">Stacks</h1>
        <div class="w-full md:w-fit flex md:block mt-2">
            @if (SelectedStacks.Count != 0)
            {
                <button @onclick="Cancel"
                        class="btn-primary me-2 md:w-fit">
                    Cancel (@SelectedStacks.Count)
                </button>
                <button @onclick="Execute"
                        class="btn-primary me-2 md:w-fit">
                    Execute (@SelectedStacks.Count)
                </button>
            }

            <a href="/stacks/add"
               class="btn-primary md:w-fit">
                Add stack
            </a>
        </div>
    </div>


    <div class="flex items-center justify-between text-sm mb-4">

        <div class="flex items-center">
            <div class="me-4 p-1">
                <button class="me-4 border-b-4 px-1 cursor-pointer border-primary-500">All</button>
            </div>
        </div>
        <div class="relative">
            <input type="text" class="block w-full bg-gray-300 dark:bg-neutral-700 text-gray-700 dark:text-gray-100 text-sm border-none rounded px-4 py-2 focus:bg-white focus:border-gray-500 focus:ring-0"
                   placeholder="Search for stack" @bind-value="SearchText" @bind-value:after="Search" />

            @if (!string.IsNullOrWhiteSpace(SearchText))
            {
                <button class="absolute top-0 end-0 m-2 md:m-3" @onclick="ClearSearch">
                    <Icon Type="FontAwesomeIcons.Xmark" Size="IconSize.Sm" />
                </button>
            }
        </div>
    </div>

    <Panel>
        <Loader Visible="IsLoading" ShowOverlay="true" />

        @if (!Stacks.Any() && !IsLoading)
        {
            <div class="flex flex-wrap items-center justify-between w-full h-full min-h-20">
                <p class="text-sm p-6 w-full text-center">No stacks found, go <a href="stacks/add" class="link">add</a> your first one!</p>
            </div>
        }
        else
        {
            <div class="flex items-center justify-between py-6 text-2xs border-b border-gray-200 dark:border-neutral-500">
                <div class="flex items-center">
                    <div class="ps-3" @onclick="async() => await ToggleAllSelected()">
                        <InputCheckbox Value="SelectedStacks.Count == Stacks.Count() && Stacks.Count() != 0"
                                       ValueExpression="(() => IsLoading)" />
                    </div>
                    <p class="ps-3">Stack</p>
                </div>
                <div class="pe-3">
                    <p>Last executed</p>
                </div>
            </div>

            @foreach (var stack in Stacks)
            {
                <div class="flex items-baseline border-b cursor-pointer dark:border-neutral-600 hover:bg-gray-400 dark:hover:bg-neutral-600">
                    <div class="ps-3" @onclick="async() => await ToggleSelected(stack)">
                        <InputCheckbox Value="SelectedStacks.Contains(stack)"
                                       ValueExpression="(() => IsLoading)" />
                    </div>

                    <a class="flex items-center justify-between px-4 py-6 w-full"
                       href="/stacks/@stack.Id">

                        <div class="flex items-center text-md">

                            <JobStateLabel Job="stack.LastJob" />

                            <p class="ms-2 font-bold">@stack.Name</p>
                        </div>

                        <div class="text-sm">
                            @if (stack.LastJob is not null)
                            {
                                <p title="@stack.LastJob.Started">@stack.LastJob.Started.ToAgo()</p>
                            }
                            else
                            {
                                <p>None</p>
                            }
                        </div>

                    </a>
                </div>
            }
        }
    </Panel>
</Page>