@page "/stacks/{QueryStackId}/job/{QueryJobId}"

@inherits SubscribeComponent

<PageTitle>@Stack?.Name - Execute - ReStack</PageTitle>

<Page @ref="Page" BreadcrumbLinks="BreadcrumbLinks" IsLoading="IsLoading">
    @if (LoadError)
    {
        <p>No stack found, go back to the <a href="@NavigationManager.Stacks()" class="link">overview</a></p>
    }
    else
    {
        @if (Stack is not null)
        {
            <div class="flex flex-wrap justify-between items-start mb-6">
                <div class="flex items-center">
                    <a href="@NavigationManager.StackDetail(Stack.Id)" class="pe-2 py-2">
                        <Icon Type="FontAwesomeIcons.ArrowLeft" Size="IconSize.Md" />
                    </a>
                    <h1 class="text-xl md:text-3xl ms-2">Job: #@Job.Sequence - <span class="text-lg">@Stack.Name</span></h1>
                </div>
                <div class="w-full md:w-fit flex md:block mt-2">
                    <a href="@NavigationManager.StackEdit(Stack.Id)"
                       class="btn-secondary me-2 md:w-fit">
                        Edit
                    </a>
                    @if (Job.State == JobState.Queued.ToString() || Job.State == JobState.Running.ToString())
                    {
                        <a @onclick="Cancel" @onclick:preventDefault="true"
                           class="btn-secondary me-2 md:w-fit">
                            Cancel
                        </a>
                    }
                    else
                    {
                        <a @onclick="Delete" @onclick:preventDefault="true"
                           class="btn-secondary me-2 md:w-fit">
                            Delete
                        </a>
                    }
                    <a @onclick="ExecuteNew" @onclick:preventDefault="true"
                       class="btn-primary">
                        Execute new
                    </a>
                </div>
            </div>

            <Panel CssClass="flex flex-wrap items-center justify-between text-sm">
                <div class="p-2 md:p-6">
                    <p class="mb-2 text-xs">State</p>
                    <p class="text-center md:text-md font-bold">
                        <JobStateLabel Job="Job" ShowLabel="true" />
                    </p>
                </div>
                <div class="p-2 md:p-6">
                    <p class="mb-2 text-xs">Started</p>
                    <p class="text-center md:text-md font-bold">@Job.Started.ToAgo()</p>
                </div>
                <div class="p-2 md:p-6">
                    <p class="mb-2 text-xs">Duration</p>
                    <p class="text-center md:text-md font-bold">@Job.Duration.ToDuration()</p>
                </div>
            </Panel>

            <div class="flex items-center justify-between text-sm mt-8 mb-4">
                <div class="flex items-center">
                    <div class="me-4 p-1">
                        <button class="me-4 border-b-4 px-1 cursor-pointer border-primary-500">Logs</button>
                    </div>
                </div>

                @if (Job.State != JobState.Running.ToString() || Job.State != JobState.Queued.ToString())
                {
                    <div class="relative flex items-center gap-2">
                        <label class="flex items-center">
                            <input type="checkbox" @bind-value="SearchError" @bind-value:after="Search" />
                            <span class="ms-1">Error</span>
                        </label>
                        <input type="text" class="block w-full bg-gray-300 dark:bg-neutral-700 text-gray-700 dark:text-gray-100 text-sm border-none rounded px-4 py-2 focus:bg-white focus:border-gray-500 focus:ring-0"
                               placeholder="Search logs" @bind-value="SearchText" @bind-value:after="Search" />

                        @if (!string.IsNullOrWhiteSpace(SearchText))
                        {
                            <button class="absolute top-0 end-0 m-2 md:m-2 me-4" @onclick="ClearSearch">
                                <Icon Type="FontAwesomeIcons.Xmark" Size="IconSize.Sm" />
                            </button>
                        }
                    </div>
                }
            </div>

            <div class="fixed bottom-0 end-0 me-5 mb-3 z-50 text-sm flex flex-col gap-2">
                <button @onclick="Page.ScrollToTop" class="rounded-full p-4 bg-gray-400 dark:bg-neutral-800">
                    <Icon Type="FontAwesomeIcons.CaretUp" Size="IconSize.Lg" />
                </button>
                <button @onclick="Page.ScrollToBottom" class="rounded-full p-4 bg-gray-400 dark:bg-neutral-800">
                    <Icon Type="FontAwesomeIcons.CaretDown" Size="IconSize.Lg" />
                </button>
            </div>

            <Panel CssClass="">

                @if (Job?.Logs is null || Job.Logs.Count == 0)
                {
                    <p class="p-2 m-auto">No logs found</p>
                }
                else
                {
                    <div class="overflow-auto h-full">
                        @lock (_logLock)
                        {
                            @if (DisplayLogs is null || DisplayLogs.Count == 0)
                            {
                                <div class="flex items-center justify-center mt-6">
                                    <p>No logs found</p>
                                </div>
                            }
                            else
                            {
                                <Virtualize Items="DisplayLogs" Context="log">
                                    <p class="flex flex-wrap p-2 mb-4 hover:bg-gray-400 dark:hover:bg-neutral-600">
                                        <div class="min-w-32 text-xs">
                                            <span class="">@log.Timestamp</span>
                                        </div>
                                        <div class="text-xs">
                                            <span class="@(log.Error ? "text-red-500" : "text-primary-300")">[@(log.Error ? "ERROR" : "INFO")]</span>
                                        </div>
                                        <div class="w-full mt-2 break-words">
                                            <span class="fs-9">@log.Message</span>
                                        </div>
                                    </p>
                                </Virtualize>
                            }
                        }
                    </div>
                }

            </Panel>
        }
    }
</Page>